*zenfinder.txt*  Minimalist file-centric fuzzy finder

Author:  Federico Ramirez <https://github.com/gosukiwi/>
License: Same terms as Vim itself (see |license|)

Help on using zenfinder                                               *zenfinder*

    1. USAGE ........................................ |zenfinder-intro|
    2. COMMANDS ..................................... |zenfinder-commands|
    3. MAPPINGS ..................................... |zenfinder-mappings|
    4. CONFIGURATION ................................ |zenfinder-configuration|

================================================================================
 1. USAGE                                                        *zenfinder-intro*

*:Zenfinder* is a minimalistic, file-centric fuzzy finder. It populates the
location list for you. You can then easily just navigate into those files, or
operate on them.

Zenfinder provides several tools to make it easy to interact with it's
location list.

Summary:

- Execute |:Zenfinder| (or |:ze|), or trigger with a custom mapping (recommended)
- Fuzzy find your files by (toggle `regex` mode with `<C-r>`)
- Choose the current file with `<C-j>` and `<C-k>` (`<C-n>` and `<C-p>` are also available)
- Press `<CR>` to open the file
- Use `:` to enter command line mode
- Filter the location list with `:Zfilter` and `:Zreject`
- Use `<C-Tab>` to toggle between the prompt and the location list
- Use `x` and `d` to delete the current file under cursor
- Use `:ldo` to perform a command on all visible files

Here are a few usage examples:

Example 1:
>
  <leader>f            Invoke :Zenfinder, in file mode
  appmodperson         Type to fuzzy find the file in `app/models/person.rb`
                       The file is at the top of the list
  <CR>                 Press ENTER, opening the file in the current active
                       window
<
Example 2:
>
  :zf                  Invoke :Zenfinder, in file mode
  appmod.rb            Type to fuzzy find all files in `app/models/*.rb`
                       Notice that it also a bunch of `.rb.old` files
  :                    Press `:`, enter in command line mode
  :Zreject .old        Reject all entries in the location file that match `.old`
  :zvsp                Open remaining files in vertical splits
<
Example 3:
>
  :zf                  Invoke :Zenfinder, in file mode
  appmod.rb            Type to fuzzy find all files in `app/models/*.rb`
                       Notice that it also a bunch of `.rb.old` files
  <C-Tab>              Go to location list window
  j                    Move around with j and k, as usual
                       Position cursor over `app/models/person.rb.old`
  x                    Press x to filter out the current file under cursor
                       Repeat as many times as needed
  :zsp                 Open all in horizontal splits
<
Example 4:
>
  <leader>b                          Invoke :Zenfinder!, in buffer mode
  <C-r>                              Use regex mode
  .md$                               Match all files ending in '.md'
  :                                  Enter command line mode
  :ldo %s/replace this/with this/g   Run a replace command in all remaining files
<
================================================================================
 2. COMMANDS                                                  *zenfinder-commands*

The following commands are provided by Zenfinder:

*:Zenfinder* [!] - alias *:ze* - opens the finder windows (the prompt and the
location list).

*:Zreject* - alias *:zr* - rejects all files matching the given pattern from the
location list. Opposite of |:Zfilter|.

*:Zfilter* - alias *:zf* - selects all files matching the given pattern from the
location list. Opposite of |:Zreject|.

*:Zsplit* [-range] - alias *:zsp* - opens all the files in the location list, in one
horizontal split each. Accepts range.

*:Zvsplit* [-range] - alias *:zvsp* - same as |:Zsplit| but using a vertical split
instead. Accepts range.

================================================================================
 3. MAPPINGS                                                  *zenfinder-mappings*

Zenfinder is divided in two windows: The prompt window, and the location list
window.

Prompt mappings:
>
  <Esc>       Close Zenfinder
  <CR>        Open current file
  <BS>        If nothing is typed, close Zenfinder
  <C-j>       Scroll down
  <C-n>       Scroll down
  <C-k>       Scroll up
  <C-p>       Scroll up
  <C-Tab>     Toggle between prompt and location list windows
  :           Execute command
  <C-r>       Toggle between fuzzy and regex mode
  <C-a>       Split open all
  <C-v>       Vertical split open all
<

Location list mappings:
>
  <CR>        Open file under cursor
  <C-Tab>     Toggle between prompt and location list windows
  <BS>        Close Zenfinder
  <Esc>       Close Zenfinder
  q           Close Zenfinder
  a           Go to prompt
  A           Go to prompt
  i           Go to prompt
  I           Go to prompt
  C           Go to prompt
  c           Go to prompt
  x           Remove file under cursor from location list
  d           Remove file under cursor from location list
  <C-a>       Split open all
  <C-v>       Vertical split open all
<
================================================================================
 4. CONFIGURATION                                        *zenfinder-configuration*

You can set the *g:zenfinder_command* variable to whatever command you want to
use, if you don't want to use `ripgrep`.

Below are a few examples:
>
  " by default, use ripgrep
  let g:zenfinder_command = 'rg %s --files --color=never --glob ""'

  " use ag, the silver searcher
  let g:zenfinder_command = 'ag %s -l --nocolor -g ""'

  " macOS/Linux
  let g:zenfinder_command = 'find %s -type f'

  " Windows
  let g:zenfinder_command = 'dir %s /-n /b /s /a-d'
<
By default, Zenfinder displays 9 files in the location list. For browsing
files, this is enough, but you can change this to whatever you want with the
*zenfinder_max_ll_files* variable:

>
  let g:zenfinder_max_ll_files = 9     " default
  let g:zenfinder_max_ll_files = 100   " 100 files max
  let g:zenfinder_max_ll_files = -1    " no limit
  
vim:tw=78:ts=8:ft=help:norl:
